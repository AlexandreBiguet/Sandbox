
cmake_minimum_required(VERSION 3.8.2)
project(packgen LANGUAGES CXX VERSION 0.0.1)

set(project_lib ${PROJECT_NAME})
set(project_lib_prefix sandbox)
set(project_lib_targets ${project_lib}Targets)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}")

include(GNUInstallDirs)

set(RPATH ${CMAKE_INSTALL_FULL_LIBDIR})

if("${CMAKE_SYSTEM_NAME}" STREQUAL "Darwin")
  set(CMAKE_INSTALL_NAME_DIR ${RPATH})
elseif("${CMAKE_SYSTEM_NAME}" STREQUAL "Linux")
  set(CMAKE_INSTALL_RPATH ${RPATH}:${CMAKE_INSTALL_RPATH})
else()
  message(FATAL_ERROR "On [${CMAKE_SYSTEM_NAME}] system : rpath not handled")
endif()

set(CMAKE_INSTALL_FULL_CMAKECONFDIR ${CMAKE_INSTALL_FULL_LIBDIR}/cmake)

add_library(${project_lib} SHARED packgen/test.cpp)
target_include_directories(
  ${project_lib}
  PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
  INTERFACE
  $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/include/${PROJECT_NAME}>
)

install(DIRECTORY packgen DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR}
        FILES_MATCHING PATTERN "*.hpp")

install(
  TARGETS ${project_lib}
  EXPORT ${project_lib_targets}
  LIBRARY DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_FULL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_FULL_BINDIR}
  INCLUDES DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR})

include(packgen)

install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/config.json DESTINATION ${CMAKE_INSTALL_FULL_SYSCONFDIR})

package_generator(
  VERBOSE
  TARGET_LIBRARY_NAME ${project_lib}
  TARGET_LIBRARY_PREFIX_NAME ${project_lib_prefix}
  TARGETS_NAME ${project_lib_targets}
  CMAKE_CONFIG_FILE ${CMAKE_CURRENT_SOURCE_DIR}/packgen-config.cmake.in
  INSTALL_LIBDIR ${CMAKE_INSTALL_FULL_LIBDIR}
  INSTALL_BINDIR ${CMAKE_INSTALL_FULL_BINDIR}
  INSTALL_INCLUDEDIR ${CMAKE_INSTALL_FULL_INCLUDEDIR}
  INSTALL_SYSCONFDIR ${CMAKE_INSTALL_FULL_SYSCONFDIR}
  INSTALL_CMAKECONFDIR ${CMAKE_INSTALL_FULL_CMAKECONFDIR}
  NAMESPACE packgen
)
